<style>
  .marquee {
    overflow: hidden;
    position: relative;
    width: 100%;
    padding: 88px 0;
    background: #fff;
    z-index: 3;
  }

  .marquee .media-home-slider-list {
    display: flex;
  }

  .marquee .media-home-slider__img {
    flex-shrink: 0;
  }

  .marquee .media-home-slider__img img {
    display: block;
    margin: 0;
  }

  @media screen and (max-width: 768px) {
    .marquee {
      padding: 30px 0;
    }

    .media-home-slider__img img {
      max-height: 55px;
    }
  }
</style>
<section class="section-box">
  <div class="medium-box-diy marquee">
    <div class="media-home-slider-list">
      {%- for block in section.blocks -%}
      <div class="media-home-slider__img to-top" style="transition-delay: 0.{{forloop.index}}s">
        <img loading="lazy" width="{{ block.settings.image.width }}" height="{{ block.settings.image.height }}" {%
          render 'image-attributes' , image: block.settings.image %} alt="{{ block.settings.image.alt | escape }}">
      </div>
      {%- endfor -%}
    </div>
  </div>
</section>
<script>
  function marqueeFn(bol){
    var content = document.querySelector("#shopify-section-{{ section.id }} .marquee")
    var ul = content.querySelector(".media-home-slider-list")
    var speed = 1.5;
    var width = content.clientWidth
    var swidth = ul.clientWidth
    var liWidthAll = 0
    let timer = null
    let isDouble = true
    let left =0
    if(width>swidth) isDouble = true
    if(bol){
      ul.innerHTML += isDouble?ul.innerHTML+ul.innerHTML:ul.innerHTML
    }

    ul.querySelectorAll(".media-home-slider__img").forEach(item=>{
      item.querySelector('img').onload=function(){
          liWidthAll+=item.offsetWidth
      }
    })

    ul.style.width = liWidthAll + "px"
    function run() {
        if (left < -liWidthAll / (isDouble?3:2)) {
            left = 0
        }
        if(left>0){
          left = -liWidthAll / (isDouble?3:2)
        }
        left-=speed
        ul.style.transform =  'translateX('+left+'px)' 
      }
    run()
    timer = setInterval(run, 20)
    content.onmouseover = function() {
        clearInterval(timer)
    }
    content.onmouseout = function() {
        timer = setInterval(run, 20)
    }

    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          // <!-- console.log('元素进入视口'); -->
          clearInterval(timer)
          timer = setInterval(run, 20)
        } else {
          // <!-- console.log('元素离开视口'); -->
          clearInterval(timer)
        }
      });
    }, { attributes: true });
    observer.observe(content);
  }
  // window.addEventListener('load',function(){
      marqueeFn(true)
  // })
</script>
{% schema %}
{
"name": "medium-marquee-list",
"class": "medium-marquee-diy",
"blocks": [
  {
    "name": "item",
    "type": "item",
    "settings": [
      {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
      }
    ]
  }
],
  "presets": [
  {
    "name": "medium-marquee-list",
    "blocks": []
  }
]
}
{% endschema %}